#!/usr/bin/env bash

TODO_DEFAULT=$(date +%Y.%m.%d.md)

edit () {
    case $EDITOR in 
        "vi")
            vi $1
            ;;
        "vim")
            vim $1
            ;;
        "nvim")
            nvim $1
            ;;
        "emacs")
            emacs $1
            ;;
        "nano" )
            nano $1
            ;;
        *)
            echo "Editor '$EDITOR' not supported. If you would like to use your
            favorite editor, please consider submitting an issue on github."
            exit
    esac
}

if [ -z $TODO_DIR ]; then
    echo "Please run setup script"
else
    case $1 in

    "")
        find $TODO_DIR -type f -exec cat {} \;
        ;;
    "rm")
        rm $TODO_DIR/$2
        ;;
    "ls")
        ls $TODO_DIR
        ;;
    "ed")
        if [ -z "$2" -a ! -f "$TODO_DIR/$TODO_DEFAULT" ]; then
            TODO_DEFAULT=$(date +%Y.%m.%d.md)
            echo "% $TODO_DEFAULT" > $TODO_DIR/$TODO_DEFAULT
            edit $TODO_DIR/$TODO_DEFAULT
	        exit
        elif [ -z "$2" ]; then
            edit $TODO_DIR/$TODO_DEFAULT
        elif [ ! -f "$TODO_DIR/$2" ]; then
            echo "# $2" > $TODO_DIR/$2
            edit $TODO_DIR/$2
	    else
            edit $TODO_DIR/$2
	    fi
        ;;
    "add")
        if [ ! -f "$TODO_DIR/$TODO_DEFAULT" ]; then
            echo "% $TODO_DEFAULT" > $TODO_DIR/$TODO_DEFAULT
        fi
        echo """$2""" >> $TODO_DIR/$TODO_DEFAULT
        ;;
    *)
        echo """
todo() usage:
todo
        print todo list
todo ls
        list todo files
todo ed [file]
        edit specified or default todo list
todo rm <file>
        remove todo list file
todo add 'message'
        add message to default todo list
todo help
        print this usage
            """
        ;;
    esac
fi
